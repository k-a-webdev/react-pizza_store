{"version":3,"file":"static/js/FullPizza.527cbd27.chunk.js","mappings":"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","sources":["pages/FullPizza/index.tsx"],"sourcesContent":["// Main imports\nimport { useEffect, useState, ReactElement } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\n\n// Redux Toolkit imports\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { addProduct } from '../../redux/cart/slice';\nimport { PizzaItem } from '../../redux/pizzas/types';\n\n// Styles\nimport styles from './Profile.module.scss';\n\n// My components\nimport { ButtonHome } from '../../components';\nimport Preloader from '../Preloader';\nimport { twMerge } from 'tailwind-merge';\nimport clsx from 'clsx';\n\n// Main block\nexport default function FullPizza(): ReactElement {\n  const [pizza, setPizza] = useState<PizzaItem>();\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(0);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t, i18n } = useTranslation();\n\n  const { id } = useParams();\n\n  const typeNames = t('pizza.typeNames', { returnObjects: true }) as string[];\n\n  const { priceUSD } = useSelector((state: RootState) => state.cartReducer);\n  const cartPizza = useSelector((state: RootState) =>\n    state.cartReducer.products.find(\n      (el) => el.id === Number(id) && el.size === activeSize && el.type === activeType,\n    ),\n  );\n\n  const onClickAdd = () => {\n    if (pizza) {\n      const selectedPizza = {\n        id: Number(id),\n        title: pizza.title,\n        title_en: pizza.title_en,\n        price: pizza.price,\n        imageUrl: pizza.imageUrl,\n        type: activeType,\n        size: activeSize,\n        count: 0,\n      };\n\n      dispatch(addProduct(selectedPizza));\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(`https://64e6234909e64530d17fa566.mockapi.io/items/?id=${id}`)\n      .then(({ data }) => {\n        setPizza(data[0]);\n\n        setActiveType(data[0].types[0]);\n        setActiveSize(data[0].sizes[0]);\n      })\n      .catch((error) => {\n        console.log(error);\n        alert('Error while receiving pizza');\n\n        navigate('/');\n      });\n  }, []);\n\n  if (!pizza) {\n    return (\n      <div className=\"py-3 px-4 md:py-10 md:px-16\">\n        <Preloader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"py-3 px-4 md:py-10 md:px-16\">\n      <div className=\"flex flex-col gap-4 items-center\">\n        <div className=\"flex flex-col gap-3 w-full items-center lg:flex-row\">\n          <img src={pizza.imageUrl} alt=\"Pizza\" className=\"max-w-[22.5rem] w-full md:w-auto\" />\n          <div className=\"w-full text-center inline-flex flex-col gap-3\">\n            <h1 className=\"font-bold text-2xl\">\n              {i18n.resolvedLanguage === 'en-US' ? pizza.title_en : pizza.title}\n            </h1>\n            <div className=\"w-full lg:w-50% flex flex-col bg-background-pizzaSelector rounded-xl p-1.5\">\n              <ul className=\"flex flex-row flex-1 mb-1.5\">\n                {pizza.types.map((type, i) => {\n                  return (\n                    <li\n                      onClick={() => setActiveType(type)}\n                      className={twMerge(\n                        clsx(\n                          'p-2 flex-1 cursor-pointer font-semibold text-base',\n                          activeType === type && 'bg-white shadow cursor-auto rounded-md',\n                        ),\n                      )}\n                      key={type}\n                    >\n                      {typeNames[type]}\n                    </li>\n                  );\n                })}\n              </ul>\n              <ul className=\"flex flex-row\">\n                {pizza.sizes.map((size) => {\n                  return (\n                    <li\n                      onClick={() => setActiveSize(size)}\n                      className={twMerge(\n                        clsx(\n                          'p-2 flex-[1] cursor-pointer font-semibold text-base',\n                          activeSize === size && 'bg-white shadow cursor-auto rounded-md',\n                        ),\n                      )}\n                      key={size}\n                    >\n                      {size} {t('pizza.size')}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n            <div className=\"w-full flex items-center justify-between mt-4\">\n              <div className=\"font-bold text-2xl leading-7 tracking-wide\">{pizza.price} â‚´</div>\n              <button\n                className=\"btn-primary group bg-white border border-myOrange text-myOrange hover:bg-myOrange hover:text-white flex items-center\"\n                onClick={onClickAdd}\n              >\n                <svg\n                  width=\"12\"\n                  height=\"12\"\n                  viewBox=\"0 0 12 12\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"mr-2 fill-myOrange\"\n                >\n                  <path\n                    d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                    fill=\"white\"\n                    className=\"fill-current\"\n                  />\n                </svg>\n                <span className=\"font-semibold text-base\">{t('button.pizzaAdd')}</span>\n                {cartPizza && (\n                  <i className=\"inline-block rounded-full bg-myOrange text-white font-semibold w-6 h-6 not-italic text-sm flex justify-center items-center ml-2 group-hover:bg-white group-hover:text-myOrange\">\n                    {cartPizza.count}\n                  </i>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <ButtonHome />\n      </div>\n    </div>\n  );\n}\n"],"names":["FullPizza","pizza","setPizza","useState","activeType","setActiveType","activeSize","setActiveSize","dispatch","useDispatch","navigate","useNavigate","t","i18n","useTranslation","id","useParams","typeNames","returnObjects","priceUSD","useSelector","state","cartReducer","cartPizza","products","find","el","Number","size","type","useEffect","axios","get","concat","then","_ref","data","types","sizes","catch","error","console","log","alert","_jsx","className","children","_jsxs","src","imageUrl","alt","resolvedLanguage","title_en","title","map","i","onClick","twMerge","clsx","price","onClickAdd","selectedPizza","count","addProduct","width","height","viewBox","fill","xmlns","d","ButtonHome","Preloader"],"sourceRoot":""}